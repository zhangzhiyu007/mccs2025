#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


# COMPER=/usr/local/arm_v5te_gcc-4.8-linaro_eglibc_eabi/bin/arm-openwrt-linux-gnueabi-#2022
COMPER=/usr/local/arm_cortex-a8+vfpv3_gcc-4.8-linaro_eglibc-2.19_eabi/bin/arm-openwrt-linux-gnueabi-#6216
# COMPER=cortex_a8-linux-#6216
CC = $(COMPER)gcc
CXX = $(COMPER)g++
AR = $(COMPER)ar
LD = $(COMPER)g++
STRIP=$(COMPER)strip


OBJDIR_RELEASE := ../OBJ
CPP_SRC_FILE:= $(shell find -iname "*.cpp")
C_SRC_FILE:= $(shell find -iname "*.c")

CPP_OBJECTS:= $(patsubst ./%.cpp, ${OBJDIR_RELEASE}/%.o, ${CPP_SRC_FILE})
C_OBJECTS:= $(patsubst ./%.c, ${OBJDIR_RELEASE}/%.o, ${C_SRC_FILE})

DIR_OBJECTS := $(dir ${CPP_OBJECTS})
DIR_OBJECTS += $(dir ${C_OBJECTS})


WINDRES = windres

INC = -I ../api/inc/
CFLAGS = -Wall -fexceptions
RESINC = 
LIB = -lpthread -ldl -lrt  -lsocketapi  -lEMFU_ARM_ODM -L ../api/lib/
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OUT_DIR_RELEASE=../Release
OUT_RELEASE = $(OUT_DIR_RELEASE)/mcss



OBJ_RELEASE:= ${CPP_OBJECTS}
OBJ_RELEASE+= ${C_OBJECTS}
			  
			

all: before_release release

.PHONY: clean all before_release
clean: clean_release

before_release: 
	$(foreach dir, ${DIR_OBJECTS},$(shell mkdir -p ${dir}))
	mkdir -p ${OUT_DIR_RELEASE}
	

after_release: 

release: out_release after_release

out_release: $(OBJ_RELEASE) 
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $^  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

${OBJDIR_RELEASE}/%.o: %.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c $< -o $@
${OBJDIR_RELEASE}/%.o: %.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c $< -o $@

clean_release:
	rm -rf $(OUT_DIR_RELEASE) $(OBJDIR_RELEASE)

